//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agat.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class agatEntities : DbContext
    {
        public agatEntities()
            : base("name=agatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<branch> branch { get; set; }
        public virtual DbSet<employee> employee { get; set; }
        public virtual DbSet<GroupOSP> GroupOSP { get; set; }
        public virtual DbSet<POS> POS { get; set; }
        public virtual DbSet<position> position { get; set; }
        public virtual DbSet<product> product { get; set; }
        public virtual DbSet<product_group> product_group { get; set; }
        public virtual DbSet<report> report { get; set; }
        public virtual DbSet<report_detail> report_detail { get; set; }
        public virtual DbSet<sales_channel> sales_channel { get; set; }
        public virtual DbSet<sales_channel_position> sales_channel_position { get; set; }
        public virtual DbSet<SKK> SKK { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tabel> tabel { get; set; }
    
        public virtual int AddBranch(string fullName, string shortName)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBranch", fullNameParameter, shortNameParameter);
        }
    
        public virtual int AddEmployee(string lastName, string firstName, string middleName, Nullable<System.DateTime> dOB, Nullable<System.DateTime> dOD, string email, Nullable<int> positionID, Nullable<byte> category, Nullable<int> pOSID, Nullable<int> chiefID, Nullable<int> magID, string personnelNumber, string aspNetUserID, Nullable<int> pNID)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dODParameter = dOD.HasValue ?
                new ObjectParameter("DOD", dOD) :
                new ObjectParameter("DOD", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(byte));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var chiefIDParameter = chiefID.HasValue ?
                new ObjectParameter("ChiefID", chiefID) :
                new ObjectParameter("ChiefID", typeof(int));
    
            var magIDParameter = magID.HasValue ?
                new ObjectParameter("MagID", magID) :
                new ObjectParameter("MagID", typeof(int));
    
            var personnelNumberParameter = personnelNumber != null ?
                new ObjectParameter("PersonnelNumber", personnelNumber) :
                new ObjectParameter("PersonnelNumber", typeof(string));
    
            var aspNetUserIDParameter = aspNetUserID != null ?
                new ObjectParameter("AspNetUserID", aspNetUserID) :
                new ObjectParameter("AspNetUserID", typeof(string));
    
            var pNIDParameter = pNID.HasValue ?
                new ObjectParameter("PNID", pNID) :
                new ObjectParameter("PNID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmployee", lastNameParameter, firstNameParameter, middleNameParameter, dOBParameter, dODParameter, emailParameter, positionIDParameter, categoryParameter, pOSIDParameter, chiefIDParameter, magIDParameter, personnelNumberParameter, aspNetUserIDParameter, pNIDParameter);
        }
    
        public virtual int AddGroupOSP(string name, Nullable<int> chief_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var chief_idParameter = chief_id.HasValue ?
                new ObjectParameter("chief_id", chief_id) :
                new ObjectParameter("chief_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddGroupOSP", nameParameter, chief_idParameter);
        }
    
        public virtual int AddPOS(string name, Nullable<int> sKK_id, string address, string phone, Nullable<int> group_id, Nullable<int> chief_id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var sKK_idParameter = sKK_id.HasValue ?
                new ObjectParameter("SKK_id", sKK_id) :
                new ObjectParameter("SKK_id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(int));
    
            var chief_idParameter = chief_id.HasValue ?
                new ObjectParameter("chief_id", chief_id) :
                new ObjectParameter("chief_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPOS", nameParameter, sKK_idParameter, addressParameter, phoneParameter, group_idParameter, chief_idParameter);
        }
    
        public virtual int AddPosition(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPosition", nameParameter);
        }
    
        public virtual int AddProduct(Nullable<int> groupID, string fullName, string shortName, Nullable<int> sortorder)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProduct", groupIDParameter, fullNameParameter, shortNameParameter, sortorderParameter);
        }
    
        public virtual int AddProductGroup(string fP, string fullName, string shortName, Nullable<byte> groupWeight)
        {
            var fPParameter = fP != null ?
                new ObjectParameter("FP", fP) :
                new ObjectParameter("FP", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var groupWeightParameter = groupWeight.HasValue ?
                new ObjectParameter("GroupWeight", groupWeight) :
                new ObjectParameter("GroupWeight", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductGroup", fPParameter, fullNameParameter, shortNameParameter, groupWeightParameter);
        }
    
        public virtual int AddSalesChannel(string fullName, string shortName)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSalesChannel", fullNameParameter, shortNameParameter);
        }
    
        public virtual int AddSKK(Nullable<int> code, Nullable<int> branchID, string fullName, string shortName)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSKK", codeParameter, branchIDParameter, fullNameParameter, shortNameParameter);
        }
    
        public virtual int EditBranch(Nullable<int> id, string fullName, string shortName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditBranch", idParameter, fullNameParameter, shortNameParameter);
        }
    
        public virtual int EditEmployee(Nullable<int> id, string lastName, string firstName, string middleName, Nullable<System.DateTime> dOB, Nullable<System.DateTime> dOD, string email, Nullable<int> positionID, Nullable<byte> category, Nullable<int> pOSID, Nullable<int> chiefID, Nullable<int> magID, string personnelNumber, string aspNetUserID, Nullable<int> pNID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dODParameter = dOD.HasValue ?
                new ObjectParameter("DOD", dOD) :
                new ObjectParameter("DOD", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(byte));
    
            var pOSIDParameter = pOSID.HasValue ?
                new ObjectParameter("POSID", pOSID) :
                new ObjectParameter("POSID", typeof(int));
    
            var chiefIDParameter = chiefID.HasValue ?
                new ObjectParameter("ChiefID", chiefID) :
                new ObjectParameter("ChiefID", typeof(int));
    
            var magIDParameter = magID.HasValue ?
                new ObjectParameter("MagID", magID) :
                new ObjectParameter("MagID", typeof(int));
    
            var personnelNumberParameter = personnelNumber != null ?
                new ObjectParameter("PersonnelNumber", personnelNumber) :
                new ObjectParameter("PersonnelNumber", typeof(string));
    
            var aspNetUserIDParameter = aspNetUserID != null ?
                new ObjectParameter("AspNetUserID", aspNetUserID) :
                new ObjectParameter("AspNetUserID", typeof(string));
    
            var pNIDParameter = pNID.HasValue ?
                new ObjectParameter("PNID", pNID) :
                new ObjectParameter("PNID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditEmployee", idParameter, lastNameParameter, firstNameParameter, middleNameParameter, dOBParameter, dODParameter, emailParameter, positionIDParameter, categoryParameter, pOSIDParameter, chiefIDParameter, magIDParameter, personnelNumberParameter, aspNetUserIDParameter, pNIDParameter);
        }
    
        public virtual int EditGroupOSP(Nullable<int> id, string name, Nullable<int> chief_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var chief_idParameter = chief_id.HasValue ?
                new ObjectParameter("chief_id", chief_id) :
                new ObjectParameter("chief_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditGroupOSP", idParameter, nameParameter, chief_idParameter);
        }
    
        public virtual int EditPOS(Nullable<int> id, string name, Nullable<int> sKK_id, string address, string phone, Nullable<int> group_id, Nullable<int> chief_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var sKK_idParameter = sKK_id.HasValue ?
                new ObjectParameter("SKK_id", sKK_id) :
                new ObjectParameter("SKK_id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var group_idParameter = group_id.HasValue ?
                new ObjectParameter("group_id", group_id) :
                new ObjectParameter("group_id", typeof(int));
    
            var chief_idParameter = chief_id.HasValue ?
                new ObjectParameter("chief_id", chief_id) :
                new ObjectParameter("chief_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditPOS", idParameter, nameParameter, sKK_idParameter, addressParameter, phoneParameter, group_idParameter, chief_idParameter);
        }
    
        public virtual int EditPosition(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditPosition", idParameter, nameParameter);
        }
    
        public virtual int EditProduct(Nullable<int> id, Nullable<int> groupID, string fullName, string shortName, Nullable<int> sortorder)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var sortorderParameter = sortorder.HasValue ?
                new ObjectParameter("sortorder", sortorder) :
                new ObjectParameter("sortorder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProduct", idParameter, groupIDParameter, fullNameParameter, shortNameParameter, sortorderParameter);
        }
    
        public virtual int EditProductGroup(Nullable<int> id, string fP, string fullName, string shortName, Nullable<byte> groupWeight)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fPParameter = fP != null ?
                new ObjectParameter("FP", fP) :
                new ObjectParameter("FP", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var groupWeightParameter = groupWeight.HasValue ?
                new ObjectParameter("GroupWeight", groupWeight) :
                new ObjectParameter("GroupWeight", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProductGroup", idParameter, fPParameter, fullNameParameter, shortNameParameter, groupWeightParameter);
        }
    
        public virtual int EditSalesChannel(Nullable<int> id, string fullName, string shortName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSalesChannel", idParameter, fullNameParameter, shortNameParameter);
        }
    
        public virtual int EditSKK(Nullable<int> sKKID, Nullable<int> branchID, string fullName, string shortName)
        {
            var sKKIDParameter = sKKID.HasValue ?
                new ObjectParameter("SKKID", sKKID) :
                new ObjectParameter("SKKID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditSKK", sKKIDParameter, branchIDParameter, fullNameParameter, shortNameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
