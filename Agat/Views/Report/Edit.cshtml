@model Agat.Models.EditReportViewModel

@{
    ViewBag.Title = "Редактирование отчета";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string arr = "";

    foreach (var s in Model.subs)
    {
        if (s.POS != null && s.tabel != null)
        {
            if (arr == "")
            {
                arr = "{employee_id:" + s.id.ToString() + ", skkid:" + s.POS.SKK_id.ToString() + ", posid:" + s.pos_id + ", LNR:" + s.tabel.personnel_number + "}";
            }
            else
            {
                arr += ", {employee_id:" + s.id.ToString() + ", skkid:" + s.POS.SKK_id.ToString() + ", posid:" + s.pos_id + ", LNR:" + s.tabel.personnel_number + "}";
            }
        }
    }
}

<script>
    function getSKKID(array, search) {
        var i = array.length;
        while (i--) {
            if (array[i].employee_id == search) {
                return array[i].skkid;
            }
        }
    }
    function getPOSID(array, search) {
        var i = array.length;
        while (i--) {
            if (array[i].employee_id == search) {
                return array[i].posid;
            }
        }
    }
    function getLNR(array, search) {
        var i = array.length;
        while (i--) {
            if (array[i].employee_id == search) {
                return array[i].LNR;
            }
        }
    }
    $(document).ready(function () {
        $("#newReportDetail").dialog({
            modal: true,
            width: 600,
            height: 450,
            autoOpen: false
        });
        $("#showDialog").click(function () {
            $("#newReportDetail").dialog('open');
            return false;
        });
        $("#closeDialogBtn").click(function () {
            $("#newReportDetail").dialog('close');
            return false;
        });

        $(function () {
            $('.datepicker').mask('99/99/9999');
            $(".datepicker").datepicker($.datepicker.regional["ru"]);
            $("#employee_id").combobox();
            $("#channel_id").combobox();
            $("#product_id").combobox();
        });

        var bar = new Array(@arr);
        $("#employee_id").combobox({
            select: function (event, ui) {
                $("#skk_id").val(getSKKID(bar, Number(this.value)));
                $("#pos_id").val(getPOSID(bar, Number(this.value)))
                $("#LNR").val(getLNR(bar, Number(this.value)))
            }
        });
    });
</script>

<h2>Редактирование отчета</h2>
<form role="form" class="" method="post">
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.id)
        <div class="form-group">
            @Html.LabelFor(model => model.employee_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.employee_id, new SelectList(Model.Employees, "Value", "Text"), "Выберите сотрудника", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employee_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.channel_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.channel_id, new SelectList(Model.SalesChannels, "Value", "Text"), "Выберите канал продаж", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.channel_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.report_sum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.report_sum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.report_sum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.report_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.report_date, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.report_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skk_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skk_id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.skk_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pos_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.pos_id, new SelectList(Model.POSes, "Value", "Text"), "Выберите точку продаж", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.pos_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LNR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LNR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.LNR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.report_number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.report_number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.report_number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>
<div class="row">
    <table class="table table-bordered table-striped">
        <tr>
            <td>Продукт</td>
            <td>Новое кол-во</td>
            <td>Новая сумма</td>
            <td>Старое кол-во</td>
            <td>Старая сумма</td>
            <td>&nbsp;</td>
        </tr>
        @foreach (var d in Model.details)
        {
            <tr>
                <td>
                    @d.product.short_name
                </td>
                <td>
                    @d.new_amt
                </td>
                <td>
                    @d.new_sum
                </td>
                <td>
                    @d.old_amt
                </td>
                <td>
                    @d.old_sum
                </td>
                <td>
                    @Html.ActionLink("Удалить", "DeleteDetail", new { @detail_id = @d.id })
                </td>
            </tr>
        }
    </table>
</div>
<a href="#" id="showDialog">Добавить</a>
@Html.EditorForModel("_AddDetailPartial")
<div>
    @Html.ActionLink("К списку", "Index")
</div>
